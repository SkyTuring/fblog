<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>图片测试</title>
      <link href="/fblog/2021/03/07/test1/"/>
      <url>/fblog/2021/03/07/test1/</url>
      
        <content type="html"><![CDATA[<p><img src="123.png" alt="测试图片"></p><p><code>test</code>图片测试</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>背包问题</title>
      <link href="/fblog/2021/03/06/bei-bao-wen-ti/"/>
      <url>/fblog/2021/03/06/bei-bao-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>01背包的状态转移方程：</p><pre class=" language-txt"><code class="language-txt">F[i,v] = max{F[i-1,v], F[i-1,v-Ci] + Wi}</code></pre><p>完全背包的状态转移方程：</p><pre class=" language-txt"><code class="language-txt">F[i,v] = max{F[i-1,v-kCi] + kWi | 0 <= kCi <= v}</code></pre><p>多重背包的状态转移方程：</p><pre class=" language-txt"><code class="language-txt">F[i,v] = max{F[i-1,v-kCi] + kWi | 0 <= k <= Mi}</code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown基础语法</title>
      <link href="/fblog/2021/03/05/markdown-ji-chu-yu-fa/"/>
      <url>/fblog/2021/03/05/markdown-ji-chu-yu-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>Markdown支持6种级别的标题，对应html标签 <strong>h1 ~ h6</strong></p><pre class=" language-md"><code class="language-md"># h1## h2### h3#### h4##### h5###### h6</code></pre><h3 id="段落及区块引用"><a href="#段落及区块引用" class="headerlink" title="段落及区块引用"></a>段落及区块引用</h3><p>需要记住的是，Markdown其实就是一种易于编写的普通文本，只不过加入了部分渲染文本的标签而已。其最终依然会转换为html标签，因此使用Markdown分段非常简单，前后至少保留一个空行即可。</p><p>而另外一个比较常见的需求就是，我们可能希望对某段文字进行强调处理。Markdown提供了一个特殊符号&gt;用于段首进行强调，被强调的文字部分将会高亮显示</p><pre class=" language-md"><code class="language-md">> 这段文字将被高亮显示...</code></pre><p>以上标记显示效果如下：</p><blockquote><p>这段文字将被高亮显示…</p></blockquote><h3 id="插入链接或图片"><a href="#插入链接或图片" class="headerlink" title="插入链接或图片"></a>插入链接或图片</h3><p>Markdown针对链接和图片的处理也比较简单，可以使用下面的语法进行标记</p><pre class=" language-md"><code class="language-md">[点击跳转至百度](http://www.baidu.com)![图片](https://url)</code></pre><p>注： 引用图片和链接的唯一区别就是在最前方添加一个感叹号。</p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><p>Markdown支持有序列表和无序列表两种形式：</p><ul><li>无序列表使用*或+或-标识</li><li>有序列表使用数字加.标识，例如：1.</li></ul><pre class=" language-md"><code class="language-md">* 黄瓜* 玉米+ 黄瓜+ 玉米- 黄瓜- 玉米1. 黄瓜2. 玉米</code></pre><p>以上标记显示效果如下：</p><ul><li>黄瓜</li><li>玉米</li></ul><ul><li>黄瓜</li><li>玉米</li></ul><ul><li>黄瓜</li><li>玉米</li></ul><ol><li>黄瓜</li><li>玉米</li></ol><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><p>有时候，为了排版漂亮，可能会加入分隔线。Markdown加入分隔线非常简单，使用下面任意一种形式都可以</p><pre class=" language-md"><code class="language-md">***---</code></pre><hr><hr><p>产生分隔线的语法要求比较松，符号之间添加空格也可以。</p><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><p>有时候，我们希望对某一部分文字进行强调，使用*或_包裹即可。使用单一符号标记的效果是斜体，使用两个符号标记的效果是加粗</p><pre class=" language-md"><code class="language-md">*这里是斜体*_这里是斜体_**这里是加粗**__这里是加粗__</code></pre><p><em>这里是斜体</em><br> <em>这里是斜体</em></p><p><strong>这里是加粗</strong><br> <strong>这里是加粗</strong></p><h2 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h2><h3 id="插入代码块"><a href="#插入代码块" class="headerlink" title="插入代码块"></a>插入代码块</h3><p>Markdown在IT圈子里面比较流行的一个重要原因是，它能够轻松漂亮地插入代码。</p><p>方法是，使用反引号`进行包裹即可。如果是行内代码引用，使用单个反引号进行包裹</p><p>这是一段<code>var x = 3</code>行内代码</p><p>如果插入一整段代码，需要至少使用两个以上反引号进行包裹， 看效果：</p><pre class=" language-kotlin"><code class="language-kotlin"><span class="token keyword">fun</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> Int<span class="token punctuation">,</span> y<span class="token operator">:</span> Int<span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token punctuation">{</span>  <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">}</span></code></pre><p>注：很多人不知道怎么输入反引号。在英文模式下，找到键盘最左侧esc键下面的第一个键点击即可。</p><h3 id="插入表格"><a href="#插入表格" class="headerlink" title="插入表格"></a>插入表格</h3><p>表格是Markdown语法中比较复杂的一个，其语法如下：</p><pre class=" language-md"><code class="language-md">表头|条目一|条目二:---:|:---:|:---:项目|项目一|项目二</code></pre><p>以上标记显示效果如下：</p><table><thead><tr><th align="center">表头</th><th align="center">条目一</th><th align="center">条目二</th></tr></thead><tbody><tr><td align="center">项目</td><td align="center">项目一</td><td align="center">项目二</td></tr></tbody></table><p>注：三个短斜杠左右的冒号用于控制对齐方式，只放置左边冒号表示文字居左，只放置右边冒号表示文字居右，如果两边都放置冒号表示文字居中。</p><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><h3 id="特殊符号处理"><a href="#特殊符号处理" class="headerlink" title="特殊符号处理"></a>特殊符号处理</h3><p>Markdown使用反斜杠\插入语法中用到的特殊符号。在Markdown中，主要有以下几种特殊符号需要处理：</p><pre class=" language-md"><code class="language-md">\   反斜线`   反引号*   星号_   底线{}  花括号[]  方括号()  括弧#   井号+   加号-   减号.   英文句点!   惊叹号</code></pre><p>例如，如果你需要插入反斜杠，就连续输入两个反斜杠即可：\ =&gt; \ 。</p><p>注：在内容中输入以上特殊符号的时候一定要注意转义，否则将导致内容显示不全，甚至排版混乱。</p><h3 id="如何给文字上色"><a href="#如何给文字上色" class="headerlink" title="如何给文字上色"></a>如何给文字上色</h3><p>Markdown的最初目标就是为纯写作而生的。因此，它并没有考虑文字颜色这一点。但是可以使用html的标签来设置颜色</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>#ff0000<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>设置颜色为红色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>#0000ff<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>设置颜色为蓝色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span></code></pre><p>效果如下</p><p><font color="#ff0000">设置颜色为红色</font><br><font color="#0000ff">设置颜色为蓝色</font></p>]]></content>
      
      
      <categories>
          
          <category> 通用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装</title>
      <link href="/fblog/2021/03/05/docker-an-zhuang/"/>
      <url>/fblog/2021/03/05/docker-an-zhuang/</url>
      
        <content type="html"><![CDATA[<h3 id="安装CentOS-Docker"><a href="#安装CentOS-Docker" class="headerlink" title="安装CentOS Docker"></a>安装CentOS Docker</h3><p>Docker 支持以下的 64 位 CentOS 版本：</p><ul><li>CentOS 7</li><li>CentOS 8</li><li>更高版本…</li></ul><h4 id="官方安装脚本"><a href="#官方安装脚本" class="headerlink" title="官方安装脚本"></a>官方安装脚本</h4><p>安装命令如下：</p><pre class=" language-shell"><code class="language-shell">curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun</code></pre><p>也可以使用国内 daocloud 一键安装命令：</p><pre class=" language-sh"><code class="language-sh">curl -sSL https://get.daocloud.io/docker | sh</code></pre><h4 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h4><ul><li>卸载旧版本</li></ul><p>较旧的 Docker 版本称为 docker 或 docker-engine 。如果已安装这些程序，请卸载它们以及相关的依赖项。</p><pre class=" language-shell"><code class="language-shell">sudo yum remove docker \         docker-client \         docker-client-latest \         docker-common \         docker-latest \         docker-latest-logrotate \         docker-logrotate \         docker-engine</code></pre><h3 id="安装-Docker-Engine-Community"><a href="#安装-Docker-Engine-Community" class="headerlink" title="安装 Docker Engine-Community"></a>安装 Docker Engine-Community</h3><h4 id="Docker-仓库进行安装"><a href="#Docker-仓库进行安装" class="headerlink" title="Docker 仓库进行安装"></a>Docker 仓库进行安装</h4><p>在新主机上首次安装 Docker Engine-Community 之前，需要设置 Docker 仓库。之后，您可以从仓库安装和更新 Docker。</p><p><strong>设置仓库</strong></p><p>安装所需的软件包。yum-utils 提供了 yum-config-manager ，并且 device mapper 存储驱动程序需要 device-mapper-persistent-data 和 lvm2。</p><pre class=" language-shell"><code class="language-shell">sudo yum install -y yum-utils device-mapper-persistent-data lvm2</code></pre><p>使用以下命令来设置稳定的仓库。</p><h4 id="官方源地址（比较慢）"><a href="#官方源地址（比较慢）" class="headerlink" title="官方源地址（比较慢）"></a>官方源地址（比较慢）</h4><pre class=" language-shell"><code class="language-shell">sudo yum-config-manager --add-repo \    https://download.docker.com/linux/centos/docker-ce.repo</code></pre><p>可以选择国内的一些源地址：</p><ul><li>阿里云</li></ul><pre class=" language-shell"><code class="language-shell">sudo yum-config-manager --add-repo \    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</code></pre><ul><li>清华大学源</li></ul><pre class=" language-shell"><code class="language-shell">sudo yum-config-manager --add-repo \    https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/centos/docker-ce.repo</code></pre><p>安装最新版本的 Docker Engine-Community 和 containerd，或者转到下一步安装特定版本：</p><pre class=" language-shell"><code class="language-shell">sudo yum install docker-ce docker-ce-cli containerd.io</code></pre><p>如果提示您接受 GPG 密钥，请选是。</p><blockquote><p><strong>有多个 Docker 仓库吗？</strong></p><p>如果启用了多个 Docker 仓库，则在未在 yum install 或 yum update 命令中指定版本的情况下，进行的安装或更新将始终安装最高版本，这可能不适合您的稳定性需求。</p></blockquote><p>Docker 安装完默认未启动。并且已经创建好 docker 用户组，但该用户组下没有用户。</p><p><strong>要安装特定版本的 Docker Engine-Community，请在存储库中列出可用版本，然后选择并安装：</strong></p><p>1、列出并排序您存储库中可用的版本。此示例按版本号（从高到低）对结果进行排序。</p><pre class=" language-shell"><code class="language-shell">yum list docker-ce --showduplicates | sort -rdocker-ce.x86_64  3:18.09.1-3.el7                     docker-ce-stabledocker-ce.x86_64  3:18.09.0-3.el7                     docker-ce-stabledocker-ce.x86_64  18.06.1.ce-3.el7                    docker-ce-stabledocker-ce.x86_64  18.06.0.ce-3.el7                    docker-ce-stable</code></pre><p>2、通过其完整的软件包名称安装特定版本，该软件包名称是软件包名称（docker-ce）加上版本字符串（第二列），从第一个冒号（:）一直到第一个连字符，并用连字符（-）分隔。例如：docker-ce-18.09.1。</p><pre class=" language-shell"><code class="language-shell">sudo yum install docker-ce-<VERSION_STRING> docker-ce-cli-<VERSION_STRING> containerd.io</code></pre><p>启动 Docker。</p><pre class=" language-shell"><code class="language-shell">sudo systemctl start docker</code></pre><p>通过运行 hello-world 映像来验证是否正确安装了 Docker Engine-Community 。</p><pre class=" language-shell"><code class="language-shell">sudo docker run hello-world</code></pre>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/fblog/2021/03/04/hello-world/"/>
      <url>/fblog/2021/03/04/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
